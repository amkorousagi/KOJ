# Use root/example as user/password credentials
version: "3.8"

services:
  front:
    image: koj_front
    container_name: front
    restart: always
    ports:
      - "3011:3011"
    working_dir: /KOJ/front
    volumes:
      - ./front/src/config.js:/KOJ/front/src/config.js
    command: sh -c "npm run start"
    tty: true
    networks:
      - mongo-net

  koj:
    image: koj_koj
    container_name: koj
    restart: always
    depends_on:
      - haproxy
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./data/submission/:/KOJ/koj/submission
      - ./data/testcase/:/KOJ/koj/testcase
      - ./koj/config.js:/KOJ/koj/config.js
    ports:
      - "3014:3014"
    working_dir: /KOJ/koj
    command: sh -c "nodemon index.js"
    tty: true
    networks:
      - mongo-net

  media:
    image: koj_media
    container_name: media
    restart: always
    depends_on:
      - haproxy
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./data/file/:/KOJ/media/file
      - ./media/config.js:/KOJ/media/config.js
    ports:
      - "3013:3013"
    working_dir: /KOJ/media
    command: sh -c "nodemon index.js"
    tty: true
    networks:
      - mongo-net

  back:
    image: koj_back
    container_name: back
    restart: always
    depends_on:
      - haproxy
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./back/config.js:/KOJ/back/config.js
      - ./back/secret.js:/KOJ/back/secret.js
    ports:
      - "3012:3012"
    working_dir: /KOJ/back
    command: sh -c "npm run dev"
    tty: true
    networks:
      - mongo-net

  mongo1:
    image: mongo
    container_name: mongo1
    restart: always
    ports:
      - "4001:27017"
    environment:
      - .env
    volumes:
      - ./mongo1:/data/db
      - ./key:/key
      - ./mongodb.conf:/etc/mongodb.conf
    networks:
      - mongo-net
    command: mongod --config /etc/mongodb.conf
    tty: true

  mongo2:
    image: mongo
    container_name: mongo2
    restart: always
    ports:
      - "4002:27017"
    environment:
      - .env
    volumes:
      - ./mongo2:/data/db
      - ./key:/key
      - ./mongodb.conf:/etc/mongodb.conf
    networks:
      - mongo-net
    command: mongod --config /etc/mongodb.conf
    tty: true

  mongo3:
    image: mongo
    container_name: mongo3
    restart: always
    ports:
      - "4003:27017"
    environment:
      - .env
    volumes:
      - ./mongo3:/data/db
      - ./key:/key
      - ./mongodb.conf:/etc/mongodb.conf
      - ./haproxy.cfg:/etc/haproxy.cfg
    networks:
      - mongo-net
    command: mongod --config /etc/mongodb.conf
    tty: true

  haproxy:
    image: haproxy:2.4
    restart: always
    container_name: haproxy
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    ports:
      - 3015:27017
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - mongo-net

networks:
  mongo-net:
    driver: bridge
