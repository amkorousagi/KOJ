import { incrementIdVersion, SIGNIFIER_MASK } from './ids';
/**
 * Provides monotonically increasing ID numbers. Allows
 * releasing unused IDs back to pool.
 */
var IdManager = /** @class */ (function () {
    function IdManager() {
        this.recycled = new Array();
        this.active = new Array();
        this.allocatedCount = 0;
    }
    IdManager.prototype.get = function () {
        var id;
        id = this.recycled.shift();
        if (!id) {
            if (this.allocatedCount >= SIGNIFIER_MASK) {
                throw new Error('Ran out of IDs');
            }
            // FIXME: incrementing first means ids start at 1
            id = ++this.allocatedCount;
        }
        return id;
    };
    IdManager.prototype.release = function (id) {
        var index = this.active.indexOf(id);
        if (index === -1) {
            throw new Error("Tried to release inactive ID " + id);
        }
        this.active.splice(index);
        this.recycled.push(incrementIdVersion(id));
    };
    return IdManager;
}());
export { IdManager };
//# sourceMappingURL=IdManager.js.map