import { ObjectPool } from './internal/objectPool';
import { logger } from './logger';
import { ResourceHandle } from './ResourceHandle';
var Resources = /** @class */ (function () {
    function Resources() {
        var _this = this;
        this.handlePool = new ObjectPool(function () { return new ResourceHandle(); });
        this.handles = new Map();
        this.getOrCreateGlobalHandle = function (key) {
            var handle = _this.handles.get(key);
            if (!handle) {
                handle = _this.handlePool.acquire();
                _this.handles.set(key, handle);
            }
            return handle;
        };
        this.load = function (key) {
            return _this.getOrCreateGlobalHandle(key).promise;
        };
        this.resolve = function (key, value) {
            _this.getOrCreateGlobalHandle(key).resolve(value);
            logger.debug('Resolved resource', key);
        };
        this.immediate = function (key) {
            return _this.getOrCreateGlobalHandle(key).value;
        };
        this.remove = function (key) {
            var value = _this.handles.get(key);
            if (value) {
                _this.handlePool.release(value);
                _this.handles.delete(key);
            }
        };
    }
    return Resources;
}());
export { Resources };
//# sourceMappingURL=Resources.js.map