import { ObjectPool } from './internal/objectPool';
import { ResourceHandle } from './ResourceHandle';
var Assets = /** @class */ (function () {
    function Assets(_loaders) {
        var _this = this;
        this._loaders = _loaders;
        this.handlePool = new ObjectPool(function () { return new ResourceHandle(); });
        this.handles = new Map();
        this.load = function (loader, key) {
            var handle = _this.handles.get(_this.getKey(loader, key));
            if (!handle) {
                handle = _this.handlePool.acquire();
                _this.handles.set(_this.getKey(loader, key), handle);
                _this._loaders[loader](key).then(function (value) { return handle.resolve(value); });
            }
            return handle.promise;
        };
        this.immediate = function (loader, key) {
            var handle = _this.handles.get(_this.getKey(loader, key));
            if (!handle)
                return null;
            return handle.value;
        };
        this.getKey = function (loader, key) { return loader + ":" + key; };
    }
    return Assets;
}());
export { Assets };
//# sourceMappingURL=Assets.js.map