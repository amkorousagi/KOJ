const problem_scoreSchema = mongoose.Schema({
  problem: { type: Schema.Types.ObjectId, ref: "Problem" },
  student: { type: Schema.Types.ObjectId, ref: "User" },
  score: Number,
  created_date: { type: Date, required: true, default: () => Date.now() },
  updated_date: { type: Date, required: true, default: () => Date.now() },
});
json -> excel



const userSchema = mongoose.Schema({
  id: { type: String, unique: true },
  password: String,
  name: String,
  user_type: String,
});


excel -> json





const XLSX = require("xlsx");
const fs = require("fs");

const data = XLSX.readFile("test.xlsx");

const sheetName = data.SheetNames[0];

const sheet = data.Sheets[sheetName];

const jsoon = XLSX.utils.sheet_to_json(sheet);

const sheeet = XLSX.utils.json_to_sheet(jsoon);

fs.open('test1.json', 'w', function(err, fd){
    if(err) throw err;

    console.log(JSON.stringify(jsoon));
    fs.writeFileSync('test1.json',JSON.stringify(jsoon))
    console.log("done")
})

const xlsxFile = XLSX.utils.book_new();
XLSX.utils.book_append_sheet(xlsxFile, sheeet)
XLSX.writeFile(xlsxFile, 'test2.xlsx')

console.log(1);